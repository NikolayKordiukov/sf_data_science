# К сожалению, браузеры не умеют писать POST-запросы самостоятельно. Это реализуется только через клиентские приложения, поэтому нам не хватит обычного браузера, чтобы проверить сервис.

# Если вы любите визуальные редакторы запросов, рекомендуем обратить внимание на Postman.

# Напишем простой сервис в соседнем скрипте, используя библиотеку requests, которая позволяет отправлять HTTP-запросы. Для этого создадим отдельный файл client.py, в котором опишем работу программы клиента.

# Чтобы выполнить POST-запрос, нужно просто вызвать соответствующую функцию и передать ей адрес (URL) и содержимое тела запроса.

# import requests
# if __name__ == '__main__':
#     r = requests.post('http://localhost:5000/add', json={'num': 5})

# Далее выведем статус-код ответа:
# print(r.status_code)


# Теперь пропишем проверку:
# if r.status_code == 200:
#    print(r.json()['result'])
# else:
#    print(r.text)


# Полный код нашего простейшего клиентского приложения будет выглядеть так:

import requests

if __name__ == '__main__':
    # выполняем POST-запрос на сервер по эндпоинту add с параметром json
    r = requests.post('http://localhost:5000/add', json={'num': 15})
    # выводим статус запроса
    print(r.status_code)
    # реализуем обработку результата
    if r.status_code == 200:
        # если запрос выполнен успешно (код обработки=200),
        # выводим результат на экран
        print(r.json()['result'])
    else:
        # если запрос завершён с кодом, отличным от 200,
        # выводим содержимое ответа
        print(r.text)


